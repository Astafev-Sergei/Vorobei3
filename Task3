import SwiftUI


struct ContentView: View {
    @State private var animationProgress: CGFloat = 0.0
    var resetDelay: Double = 0.5

    var body: some View {
        ZStack {
            Button(action: {
                
                withAnimation(.interpolatingSpring(stiffness: 300, damping: 15)) {
                    animationProgress = 1.0
                }
               
                DispatchQueue.main.asyncAfter(deadline: .now() + resetDelay) {
                    animationProgress = 0.0
                }
            }, label: {
                HStack {
                    Image(systemName: "arrowtriangle.right.fill")
                        .padding(-8)
                        .scaleEffect(animationProgress)
                        .offset(CGSize(width: 18.0 * animationProgress + 9, height: 0))
                        .opacity(animationProgress)

                    Image(systemName: "arrowtriangle.right.fill")
                        .padding(-8)
                        .offset(CGSize(width: 27.0 * animationProgress, height: 0))
                    
                    Image(systemName: "arrowtriangle.right.fill")
                        .padding(-8)
                        .scaleEffect(1.0 - animationProgress)
                        .offset(CGSize(width: 18.0 * animationProgress, height: 0))
                        .opacity(1.0 - animationProgress)
                }
                .font(.largeTitle)
                .foregroundColor(.blue)
            })
            .allowsHitTesting(animationProgress == 0.0)
        }
        .padding()
    }
}



#Preview {
    ContentView()
}
